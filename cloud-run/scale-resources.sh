#!/bin/bash

# Script para configurar a escala de recursos no Google Cloud Run
# Este script deve ser executado a partir da raiz do projeto

# Configura√ß√µes - ALTERE ESTAS VARI√ÅVEIS
PROJECT_ID="tarefo-ai-prod"
REGION="southamerica-east1"
SERVICE_NAME="tarefo-ai"

# Configura√ß√µes de recursos e escala
MIN_INSTANCES=1      # M√≠nimo de inst√¢ncias
MAX_INSTANCES=10     # M√°ximo de inst√¢ncias
CPU="1"              # CPUs por inst√¢ncia (0.5, 1, 2, 4, 8)
MEMORY="2Gi"         # Mem√≥ria por inst√¢ncia (128Mi, 256Mi, 512Mi, 1Gi, 2Gi, 4Gi, 8Gi)
CONCURRENCY=80       # M√°ximo de requisi√ß√µes por inst√¢ncia
TIMEOUT="300s"       # Timeout para requisi√ß√µes

# Verificar se gcloud est√° instalado
if ! command -v gcloud &> /dev/null; then
    echo "‚ùå Google Cloud SDK (gcloud) n√£o encontrado. Por favor, instale-o primeiro."
    echo "   Instru√ß√µes: https://cloud.google.com/sdk/docs/install"
    exit 1
fi

# Verificar login
echo "üîë Verificando autentica√ß√£o no Google Cloud..."
if ! gcloud auth print-access-token &> /dev/null; then
    echo "üìù Fa√ßa login no Google Cloud..."
    gcloud auth login
fi

# Configurar projeto
echo "üîß Configurando projeto ${PROJECT_ID}..."
gcloud config set project ${PROJECT_ID}

# Verificar se o servi√ßo existe
if ! gcloud run services describe ${SERVICE_NAME} --region=${REGION} --format="value(name)" &>/dev/null; then
    echo "‚ùå Servi√ßo ${SERVICE_NAME} n√£o encontrado na regi√£o ${REGION}."
    echo "   Verifique se o servi√ßo foi implantado corretamente."
    exit 1
fi

# Atualizar configura√ß√µes de recursos e escala
echo "‚öôÔ∏è Atualizando configura√ß√µes de recursos e escala do servi√ßo ${SERVICE_NAME}..."
gcloud run services update ${SERVICE_NAME} \
  --region=${REGION} \
  --min-instances=${MIN_INSTANCES} \
  --max-instances=${MAX_INSTANCES} \
  --cpu=${CPU} \
  --memory=${MEMORY} \
  --concurrency=${CONCURRENCY} \
  --timeout=${TIMEOUT}

# Mostrar as configura√ß√µes atualizadas
echo "üìä Configura√ß√µes atualizadas para o servi√ßo ${SERVICE_NAME}:"
gcloud run services describe ${SERVICE_NAME} --region=${REGION} --format="table(
  name,
  serving_state,
  last_deployed_time,
  traffic_statuses,
  uri,
  template.scaling.minInstanceCount,
  template.scaling.maxInstanceCount,
  template.containers[0].resources.limits,
  template.containers[0].resources.requests,
  template.timeoutSeconds,
  template.containerConcurrency
)"

echo "‚úÖ Configura√ß√£o de escala conclu√≠da com sucesso!"
echo ""
echo "üìù Recomenda√ß√µes para escala:"
echo "- Monitore o uso de recursos e ajuste as configura√ß√µes conforme necess√°rio"
echo "- Para cargas de trabalho previs√≠veis, considere aumentar o m√≠nimo de inst√¢ncias"
echo "- Para opera√ß√µes de longa dura√ß√£o, considere aumentar o timeout"
echo "- Se a aplica√ß√£o for stateful, reduza a concorr√™ncia por inst√¢ncia"