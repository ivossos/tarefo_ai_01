#!/bin/bash

# Script para configurar a inst√¢ncia de banco de dados PostgreSQL no Google Cloud SQL
# Este script deve ser executado a partir da raiz do projeto

# Configura√ß√µes - ALTERE ESTAS VARI√ÅVEIS
PROJECT_ID="tarefo-ai-prod"
REGION="southamerica-east1"
INSTANCE_NAME="tarefo-ai-db"
DB_NAME="tarefo_ai"
DB_USER="tarefo_app"
ROOT_PASSWORD=""
DB_PASSWORD=""

# Verificar se gcloud est√° instalado
if ! command -v gcloud &> /dev/null; then
    echo "‚ùå Google Cloud SDK (gcloud) n√£o encontrado. Por favor, instale-o primeiro."
    echo "   Instru√ß√µes: https://cloud.google.com/sdk/docs/install"
    exit 1
fi

# Verificar login
echo "üîë Verificando autentica√ß√£o no Google Cloud..."
if ! gcloud auth print-access-token &> /dev/null; then
    echo "üìù Fa√ßa login no Google Cloud..."
    gcloud auth login
fi

# Configurar projeto
echo "üîß Configurando projeto ${PROJECT_ID}..."
gcloud config set project ${PROJECT_ID}

# Habilitar a API do Cloud SQL
echo "üîå Habilitando API do Cloud SQL..."
gcloud services enable sqladmin.googleapis.com

# Solicitar senhas se n√£o estiverem definidas
if [ -z "$ROOT_PASSWORD" ]; then
    echo "üìù Digite a senha para o usu√°rio root do PostgreSQL:"
    read -s ROOT_PASSWORD
    echo
    
    if [ -z "$ROOT_PASSWORD" ]; then
        echo "‚ùå Senha root n√£o pode estar vazia!"
        exit 1
    fi
fi

if [ -z "$DB_PASSWORD" ]; then
    echo "üìù Digite a senha para o usu√°rio da aplica√ß√£o (${DB_USER}):"
    read -s DB_PASSWORD
    echo
    
    if [ -z "$DB_PASSWORD" ]; then
        echo "‚ùå Senha do usu√°rio da aplica√ß√£o n√£o pode estar vazia!"
        exit 1
    fi
fi

# Criar a inst√¢ncia do Cloud SQL
echo "üèóÔ∏è Criando inst√¢ncia do Cloud SQL (${INSTANCE_NAME})..."
echo "‚è±Ô∏è Esta opera√ß√£o pode levar v√°rios minutos..."

gcloud sql instances create ${INSTANCE_NAME} \
  --database-version=POSTGRES_13 \
  --cpu=1 \
  --memory=3840MB \
  --region=${REGION} \
  --root-password=${ROOT_PASSWORD} \
  --storage-type=SSD \
  --storage-size=10GB \
  --availability-type=zonal

# Criar banco de dados
echo "üóÑÔ∏è Criando banco de dados ${DB_NAME}..."
gcloud sql databases create ${DB_NAME} --instance=${INSTANCE_NAME}

# Criar usu√°rio para a aplica√ß√£o
echo "üë§ Criando usu√°rio ${DB_USER}..."
gcloud sql users create ${DB_USER} \
  --instance=${INSTANCE_NAME} \
  --password=${DB_PASSWORD}

# Obter a string de conex√£o
INSTANCE_CONNECTION_NAME="${PROJECT_ID}:${REGION}:${INSTANCE_NAME}"
CONNECTION_STRING="postgresql://${DB_USER}:${DB_PASSWORD}@/crud?host=/cloudsql/${INSTANCE_CONNECTION_NAME}"

# Armazenar a string de conex√£o no Secret Manager
echo "üîê Armazenando string de conex√£o no Secret Manager..."
echo ${CONNECTION_STRING} | gcloud secrets create database-url --data-file=- --replication-policy="automatic"

echo "‚úÖ Configura√ß√£o do banco de dados conclu√≠da com sucesso!"
echo "‚ÑπÔ∏è Inst√¢ncia: ${INSTANCE_NAME}"
echo "‚ÑπÔ∏è Banco de dados: ${DB_NAME}"
echo "‚ÑπÔ∏è Usu√°rio da aplica√ß√£o: ${DB_USER}"
echo
echo "üìù Pr√≥ximos passos:"
echo "1. Execute o script ./cloud-run/script-deploy.sh para implantar a aplica√ß√£o"
echo "2. Ap√≥s a implanta√ß√£o, execute a migra√ß√£o do banco de dados"