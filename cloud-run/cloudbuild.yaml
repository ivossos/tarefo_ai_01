steps:
# Etapa 1: Construir a imagem Docker
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/tarefo-ai:$COMMIT_SHA', '.']

# Etapa 2: Enviar a imagem para o Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/tarefo-ai:$COMMIT_SHA']

# Etapa 3: Implantar no Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - 'run'
  - 'deploy'
  - 'tarefo-ai'
  - '--image'
  - 'gcr.io/$PROJECT_ID/tarefo-ai:$COMMIT_SHA'
  - '--region'
  - 'southamerica-east1'
  - '--platform'
  - 'managed'
  - '--allow-unauthenticated'
  - '--update-secrets=DATABASE_URL=database-url:latest'
  - '--update-secrets=TWILIO_AUTH_TOKEN=twilio-auth-token:latest'
  - '--update-secrets=TWILIO_ACCOUNT_SID=twilio-account-sid:latest'
  - '--update-secrets=TWILIO_PHONE_NUMBER=twilio-phone-number:latest'
  - '--update-secrets=OPENAI_API_KEY=openai-api-key:latest'
  - '--update-secrets=TELEGRAM_BOT_TOKEN=telegram-bot-token:latest'
  - '--update-secrets=GOOGLE_CLIENT_ID=google-client-id:latest'
  - '--update-secrets=GOOGLE_CLIENT_SECRET=google-client-secret:latest'
  - '--update-secrets=GOOGLE_REDIRECT_URL=google-redirect-url:latest'
  - '--set-env-vars=NODE_ENV=production'

# Etapa 4: Aplicar tag 'latest' à imagem
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/$PROJECT_ID/tarefo-ai:$COMMIT_SHA', 'gcr.io/$PROJECT_ID/tarefo-ai:latest']

# Etapa 5: Enviar a imagem com tag 'latest'
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/tarefo-ai:latest']

# Configuração de tempo limite para build (30 minutos)
timeout: 1800s

# Imagens a serem armazenadas no Container Registry
images:
- 'gcr.io/$PROJECT_ID/tarefo-ai:$COMMIT_SHA'
- 'gcr.io/$PROJECT_ID/tarefo-ai:latest'